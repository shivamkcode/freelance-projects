{"ast":null,"code":"var _jsxFileName = \"/home/ashu/100/todolist/todo list/src/components/TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [todos, setTodos] = useState(() => JSON.parse(window.localStorage.getItem('todos')) || []);\n  React.useEffect(() => {\n    window.localStorage.setItem('todos', JSON.stringify(todos));\n  });\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n    setTodos(prev => prev.map(x => x.id === todoId ? newValue : x));\n  };\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n  const completeTodo = id => {\n    let updatedTodos = Todo.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's the plan for the day?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      updateTodo: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"w7n9BLyoihXjHEo86ja9gZUN9zE=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","Todo","TodoForm","TodoList","todos","setTodos","JSON","parse","window","localStorage","getItem","useEffect","setItem","stringify","addTodo","todo","text","test","newTodos","updateTodo","todoId","newValue","prev","map","x","id","removeTodo","removeArr","filter","completeTodo","updatedTodos","isComplete"],"sources":["/home/ashu/100/todolist/todo list/src/components/TodoList.js"],"sourcesContent":["import React, {useState} from 'react'\nimport Todo from './Todo'\nimport TodoForm from './TodoForm'\n\n\nfunction TodoList() {\n    const [todos, setTodos] =useState(() => \n    JSON.parse(window.localStorage.getItem('todos')) ||[])\n\n    React.useEffect(() => {\n        window.localStorage.setItem('todos', JSON.stringify(todos))\n    })\n\n\n    const addTodo = todo =>{\n        if(!todo.text || /^\\s*$/.test(todo.text)){\n            return\n        }\n\n        const newTodos = [todo, ...todos]\n\n        setTodos(newTodos)\n    }\n\n    const updateTodo = (todoId, newValue) =>{\n        if(!newValue.text || /^\\s*$/.test(newValue.text)){\n            return\n        }\n\n        setTodos(prev => prev.map(x => (x.id === todoId ? newValue : x)))\n    }\n\n    const removeTodo = id =>{\n        const removeArr = [...todos].filter(todo => todo.id !== id)\n\n        setTodos(removeArr)\n    }\n\n    const completeTodo = id =>{\n        let updatedTodos = Todo.map(todo =>{\n            if(todo.id === id){\n                todo.isComplete = !todo.isComplete\n            }\n            return todo\n        })\n        setTodos(updatedTodos)\n    }\n\n  return (\n    <div>\n        <h1>What's the plan for the day?</h1>\n        <TodoForm onSubmit={addTodo}/>\n        <Todo \n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo} updateTodo={updateTodo}\n        />\n    </div>\n  )\n}\n\nexport default TodoList"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAA;AAGjC,SAASC,QAAQ,GAAG;EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAEL,QAAQ,CAAC,MAClCM,IAAI,CAACC,KAAK,CAACC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAG,EAAE,CAAC;EAEtDX,KAAK,CAACY,SAAS,CAAC,MAAM;IAClBH,MAAM,CAACC,YAAY,CAACG,OAAO,CAAC,OAAO,EAAEN,IAAI,CAACO,SAAS,CAACT,KAAK,CAAC,CAAC;EAC/D,CAAC,CAAC;EAGF,MAAMU,OAAO,GAAGC,IAAI,IAAG;IACnB,IAAG,CAACA,IAAI,CAACC,IAAI,IAAI,OAAO,CAACC,IAAI,CAACF,IAAI,CAACC,IAAI,CAAC,EAAC;MACrC;IACJ;IAEA,MAAME,QAAQ,GAAG,CAACH,IAAI,EAAE,GAAGX,KAAK,CAAC;IAEjCC,QAAQ,CAACa,QAAQ,CAAC;EACtB,CAAC;EAED,MAAMC,UAAU,GAAG,CAACC,MAAM,EAAEC,QAAQ,KAAI;IACpC,IAAG,CAACA,QAAQ,CAACL,IAAI,IAAI,OAAO,CAACC,IAAI,CAACI,QAAQ,CAACL,IAAI,CAAC,EAAC;MAC7C;IACJ;IAEAX,QAAQ,CAACiB,IAAI,IAAIA,IAAI,CAACC,GAAG,CAACC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKL,MAAM,GAAGC,QAAQ,GAAGG,CAAE,CAAC,CAAC;EACrE,CAAC;EAED,MAAME,UAAU,GAAGD,EAAE,IAAG;IACpB,MAAME,SAAS,GAAG,CAAC,GAAGvB,KAAK,CAAC,CAACwB,MAAM,CAACb,IAAI,IAAIA,IAAI,CAACU,EAAE,KAAKA,EAAE,CAAC;IAE3DpB,QAAQ,CAACsB,SAAS,CAAC;EACvB,CAAC;EAED,MAAME,YAAY,GAAGJ,EAAE,IAAG;IACtB,IAAIK,YAAY,GAAG7B,IAAI,CAACsB,GAAG,CAACR,IAAI,IAAG;MAC/B,IAAGA,IAAI,CAACU,EAAE,KAAKA,EAAE,EAAC;QACdV,IAAI,CAACgB,UAAU,GAAG,CAAChB,IAAI,CAACgB,UAAU;MACtC;MACA,OAAOhB,IAAI;IACf,CAAC,CAAC;IACFV,QAAQ,CAACyB,YAAY,CAAC;EAC1B,CAAC;EAEH,oBACE;IAAA,wBACI;MAAA,UAAI;IAA4B;MAAA;MAAA;MAAA;IAAA,QAAK,eACrC,QAAC,QAAQ;MAAC,QAAQ,EAAEhB;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE,eAC9B,QAAC,IAAI;MACL,KAAK,EAAEV,KAAM;MACb,YAAY,EAAEyB,YAAa;MAC3B,UAAU,EAAEH,UAAW;MAAC,UAAU,EAAEP;IAAW;MAAA;MAAA;MAAA;IAAA,QAC7C;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEV;AAAC,GAtDQhB,QAAQ;AAAA,KAARA,QAAQ;AAwDjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}