{"ast":null,"code":"var _jsxFileName = \"/home/ashu/100/todo/src/components/TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoForm(props) {\n  _s();\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleSubmit,\n    children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Update Item\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a todo\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        children: \"Add todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoForm, \"xbvrlj5lrJII/vsr6NCUo81spDI=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","edit","value","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"sources":["/home/ashu/100/todo/src/components/TodoForm.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\n\nfunction TodoForm(props) {\n    const [input, setInput] = useState(props.edit ? props.edit.value : '')\n\n    const inputRef = useRef(null)\n\n    useEffect(()=> {\n        inputRef.current.focus()\n    })\n\n    const handleChange = e => {\n        setInput(e.target.value)\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        props.onSubmit({\n            id: Math.floor(Math.random() * 10000),\n            text: input\n        });\n\n        setInput('')\n    }\n\n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n        {props.edit ? (\n            <> <input \n        type=\"text\" placeholder=\"Update Item\" value={input} name=\"text\" className=\"todo-input\"\n        onChange={handleChange} ref={inputRef}\n        />\n        <button className=\"todo-button\">Update</button>\n        </>) : \n        (<>\n         <input \n            type=\"text\" placeholder=\"Add a todo\" value={input} name=\"text\" className=\"todo-input\"\n            onChange={handleChange} ref={inputRef}\n            />\n            <button className=\"todo-button\">Add todo</button>\n            </>)\n        }\n\n       \n    </form>\n  )\n}\n\nexport default TodoForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAO,OAAO;AAAA;AAAA;AAExD,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACI,KAAK,CAACG,IAAI,GAAGH,KAAK,CAACG,IAAI,CAACC,KAAK,GAAG,EAAE,CAAC;EAEtE,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAK;IACXQ,QAAQ,CAACC,OAAO,CAACC,KAAK,EAAE;EAC5B,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAGC,CAAC,IAAI;IACtBP,QAAQ,CAACO,CAAC,CAACC,MAAM,CAACN,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMO,YAAY,GAAGF,CAAC,IAAI;IACtBA,CAAC,CAACG,cAAc,EAAE;IAElBZ,KAAK,CAACa,QAAQ,CAAC;MACXC,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,KAAK,CAAC;MACrCC,IAAI,EAAEjB;IACV,CAAC,CAAC;IAEFC,QAAQ,CAAC,EAAE,CAAC;EAChB,CAAC;EAEH,oBACE;IAAM,SAAS,EAAC,WAAW;IAAC,QAAQ,EAAES,YAAa;IAAA,UAC9CX,KAAK,CAACG,IAAI,gBACP;MAAA,WAAE,GAAC;QACP,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,aAAa;QAAC,KAAK,EAAEF,KAAM;QAAC,IAAI,EAAC,MAAM;QAAC,SAAS,EAAC,YAAY;QACtF,QAAQ,EAAEO,YAAa;QAAC,GAAG,EAAEH;MAAS;QAAA;QAAA;QAAA;MAAA,QACpC,eACF;QAAQ,SAAS,EAAC,aAAa;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA,gBAC5C,gBACF;MAAA,wBACA;QACG,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,YAAY;QAAC,KAAK,EAAEJ,KAAM;QAAC,IAAI,EAAC,MAAM;QAAC,SAAS,EAAC,YAAY;QACrF,QAAQ,EAAEO,YAAa;QAAC,GAAG,EAAEH;MAAS;QAAA;QAAA;QAAA;MAAA,QACpC,eACF;QAAQ,SAAS,EAAC,aAAa;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;EAC7C;IAAA;IAAA;IAAA;EAAA,QAIL;AAEX;AAAC,GA7CQN,QAAQ;AAAA,KAARA,QAAQ;AA+CjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}